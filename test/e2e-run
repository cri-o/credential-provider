#!/usr/bin/env bash
set -euox pipefail

SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
cd "$SCRIPT_DIR"

# Start the local container registry
registry/start

# Setup the requirements and run the test pod
kubectl apply -f cluster/rbac.yml -f cluster/secret.yml

GOT=$(mktemp)
EXPECTED=$(mktemp)
trap 'rm "$GOT" "$EXPECTED"' EXIT

clear_journald() {
    sudo journalctl --vacuum-time=1ms
}

run_test_pod() {
    kubectl delete -f cluster/pod.yml || true
    kubectl apply -f cluster/pod.yml
    kubectl wait --for=condition=ready pod/test-pod
}

save_logs() {
    # Save and clean the logs from the last credential provider run
    LAST_PID=$(sudo journalctl -q -o cat --no-pager -n 1 --output-fields _PID _COMM=credential-prov)
    sudo journalctl _PID="$LAST_PID" | sed -E 's;.*.go:[0-9]+:\s(.*);\1;' >"$GOT"
}

testcase_mirror_found() {
    clear_journald
    run_test_pod
    save_logs

    AUTH_FILE=/etc/crio/auth/default-7e59ad64326bc321517fb6fc6586de5ee149178394d9edfa2a877176cdf6fad5.json

    # First test result: mirror should be found and written
    cat >"$EXPECTED" <<EOL
Running credential provider
Reading from stdin
Got stdin, parsing JSON as CredentialProviderRequest
Parsed credential provider request for image "docker.io/library/nginx"
Parsing namespace from request
Matching mirrors for registry config: /etc/containers/registries.conf
Got mirror(s) for "docker.io/library/nginx": "localhost:5000"
Getting secrets from namespace: default
Got 1 secret(s)
Parsing secret: my-secret
Found docker config JSON auth in secret "my-secret" for "http://localhost:5000"
Checking if mirror "localhost:5000" matches registry "localhost:5000"
Using mirror auth "localhost:5000" for registry from secret "localhost:5000"
Wrote auth file to $AUTH_FILE with 1 number of entries
Auth file path: $AUTH_FILE
EOL

    diff "$GOT" "$EXPECTED"

    # Assert CRI-O logs and auth file
    CRIO_LOGS=$(sudo journalctl -u crio)
    echo "$CRIO_LOGS" | grep -q "Using auth file for namespace default: $AUTH_FILE"
    echo "$CRIO_LOGS" | grep -q "Removed temp auth file: $AUTH_FILE"
    [[ $(find "/etc/crio/auth" -type f) == "" ]]
    test -d /etc/crio/auth/in-use
    [[ $(find "/etc/crio/auth/in-use" -type f) == "" ]]

    # Assert registry authorization
    podman logs registry &>output
    grep -q "authorized request" output
}

testcase_no_mirror_found() {
    clear_journald
    echo "" | sudo tee /etc/containers/registries.conf
    run_test_pod
    save_logs

    # Second test result: No mirror should be found, auth file should not exist any more since CRI-O removed it.
    cat >"$EXPECTED" <<EOL
Running credential provider
Reading from stdin
Got stdin, parsing JSON as CredentialProviderRequest
Parsed credential provider request for image "docker.io/library/nginx"
Parsing namespace from request
Matching mirrors for registry config: /etc/containers/registries.conf
No mirrors found, will not write any auth file
EOL

    diff "$GOT" "$EXPECTED"

    # Assert CRI-O logs and auth file
    CRIO_LOGS=$(sudo journalctl -u crio)
    echo "$CRIO_LOGS" | grep -q "Looking for namespaced auth JSON file in:"
    echo "$CRIO_LOGS" | grep -vq "Using auth file for namespace default"
    [[ $(find "/etc/crio/auth" -type f) == "" ]]
}

testcase_no_registries_conf_found() {
    clear_journald
    sudo rm /etc/containers/registries.conf
    run_test_pod
    save_logs

    # Third test result: registries.conf does not exist, do nothing
    cat >"$EXPECTED" <<EOL
Running credential provider
Registries conf path "/etc/containers/registries.conf" does not exist, stopping
EOL

    diff "$GOT" "$EXPECTED"

    # Assert CRI-O logs and auth file
    CRIO_LOGS=$(sudo journalctl -u crio)
    echo "$CRIO_LOGS" | grep -q "Looking for namespaced auth JSON file in:"
    echo "$CRIO_LOGS" | grep -vq "Using auth file for namespace default"
}

# Run all test cases
testcase_mirror_found
testcase_no_mirror_found
testcase_no_registries_conf_found
