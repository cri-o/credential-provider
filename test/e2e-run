#!/usr/bin/env bash
set -euox pipefail

SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
cd "$SCRIPT_DIR"

# Start the local container registry
registry/start

# Setup the requirements and run the test pod
kubectl apply -f cluster/rbac.yml -f cluster/secret.yml

GOT=$(mktemp)
EXPECTED=$(mktemp)
CRIO_LOGS=$(mktemp)
trap 'rm "$GOT" "$EXPECTED" "$CRIO_LOGS"' EXIT

AUTH_PATH=/etc/crio/auth
AUTH_PATH_IN_USE=$AUTH_PATH/in-use

REGISTRIES_CONF_PATH=/etc/containers/registries.conf

clear_journald() {
    sudo journalctl --vacuum-time=1ms --rotate
}

prepare_registries_conf() {
    if [[ $1 == rm ]]; then
        sudo rm "$REGISTRIES_CONF_PATH"
    else
        echo "$1" | sudo tee "$REGISTRIES_CONF_PATH"
    fi
    sudo systemctl restart crio
    clear_journald
}

run_test_pod() {
    kubectl delete -f cluster/pod.yml || true
    kubectl apply -f cluster/pod.yml
    kubectl wait --for=condition=ready pod/test-pod
}

save_logs() {
    # Save and clean the logs from the last credential provider run
    LAST_PID=$(sudo journalctl -q -o cat --no-pager -n 1 --output-fields _PID _COMM=crio-credential)
    sudo journalctl _PID="$LAST_PID" | sed -E 's;.*.go:[0-9]+:\s(.*);\1;' >"$GOT"
}

testcase_mirror_found() {
    prepare_registries_conf "$(cat registries.conf)"
    run_test_pod
    save_logs

    NAMESPACE=default
    IMAGE_HASH=7e59ad64326bc321517fb6fc6586de5ee149178394d9edfa2a877176cdf6fad5
    AUTH_FILE=$AUTH_PATH/$NAMESPACE-$IMAGE_HASH.json
    # AUTH_FILE_IN_USE has a UUID suffix, which we skip for validation
    AUTH_FILE_IN_USE=$AUTH_PATH_IN_USE/$NAMESPACE-$IMAGE_HASH

    # First test result: mirror should be found and written
    cat >"$EXPECTED" <<EOL
Running credential provider
Reading from stdin
Got stdin, parsing JSON as CredentialProviderRequest
Parsed credential provider request for image "docker.io/library/nginx"
Parsing namespace from request
Matching mirrors for registry config: $REGISTRIES_CONF_PATH
Got mirror(s) for "docker.io/library/nginx": "localhost:5000"
Getting secrets from namespace: $NAMESPACE
Unable to find env file "/etc/kubernetes/apiserver-url.env", using default API server host: localhost:6443
Got 1 secret(s)
Parsing secret: my-secret
Found docker config JSON auth in secret "my-secret" for "http://localhost:5000"
Checking if mirror "localhost:5000" matches registry "localhost:5000"
Using mirror auth "localhost:5000" for registry from secret "localhost:5000"
Wrote auth file to $AUTH_FILE with 1 number of entries
Auth file path: $AUTH_FILE
EOL

    diff "$GOT" "$EXPECTED"

    # Assert CRI-O logs and auth file
    # shellcheck disable=SC2024
    sudo journalctl -u crio >"$CRIO_LOGS"
    grep -q "Using auth file for namespace $NAMESPACE: $AUTH_FILE" "$CRIO_LOGS"
    grep -q "Removed temp auth file: $AUTH_FILE_IN_USE" "$CRIO_LOGS"
    [[ $(find "$AUTH_PATH" -type f) == "" ]]
    test -d $AUTH_PATH_IN_USE
    [[ $(find "$AUTH_PATH_IN_USE" -type f) == "" ]]

    # Assert registry authorization
    podman logs registry &>output
    grep -q "authorized request" output
}

testcase_no_mirror_found() {
    prepare_registries_conf ""
    run_test_pod
    save_logs

    # Second test result: No mirror should be found, auth file should not exist any more since CRI-O removed it.
    cat >"$EXPECTED" <<EOL
Running credential provider
Reading from stdin
Got stdin, parsing JSON as CredentialProviderRequest
Parsed credential provider request for image "docker.io/library/nginx"
Parsing namespace from request
Matching mirrors for registry config: $REGISTRIES_CONF_PATH
No mirrors found, will not write any auth file
EOL

    diff "$GOT" "$EXPECTED"

    # Assert CRI-O logs and auth file
    # shellcheck disable=SC2024
    sudo journalctl -u crio >"$CRIO_LOGS"
    grep -q "Looking for namespaced auth JSON file in:" "$CRIO_LOGS"
    grep -vq "Using auth file for namespace default" "$CRIO_LOGS"
    [[ $(find "$AUTH_PATH" -type f) == "" ]]
}

testcase_no_registries_conf_found() {
    prepare_registries_conf rm
    run_test_pod
    save_logs

    # Third test result: registries.conf does not exist, do nothing
    cat >"$EXPECTED" <<EOL
Running credential provider
Registries conf path "$REGISTRIES_CONF_PATH" does not exist, stopping
EOL

    diff "$GOT" "$EXPECTED"

    # Assert CRI-O logs and auth file
    # shellcheck disable=SC2024
    sudo journalctl -u crio >"$CRIO_LOGS"
    grep -q "Looking for namespaced auth JSON file in:" "$CRIO_LOGS"
    grep -vq "Using auth file for namespace default" "$CRIO_LOGS"
}

# Run all test cases
testcase_mirror_found
testcase_no_mirror_found
testcase_no_registries_conf_found
